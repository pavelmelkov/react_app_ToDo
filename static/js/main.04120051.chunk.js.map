{"version":3,"sources":["HOC/Layout/Layout.modules.css","containers/Modal/Modal.modules.css","components/TaskOne/TaskOne.modules.css","containers/Auth/Auth.modules.css","components/UI/Button/Button.modules.css","components/UI/Input/Input.modules.css","components/UI/StyleButton/StyleButton.modules.css","components/UI/ButtonMobile/ButtonMobile.modules.css","containers/TaskList/TaskList.modules.css","components/UI/Backdrop/Backdrop.modules.css","App.css","components/Task/Task.modules.css","components/TaskOne/TaskOne.js","components/UI/Button/Button.js","components/Task/Task.js","containers/Modal/Modal.js","components/UI/ButtonMobile/ButtonMobile.js","components/UI/Input/Input.js","form/FormFramework.js","components/UI/Backdrop/Backdrop.js","store/actions/tasks.js","store/actions/actionTypes.js","store/actions/layout.js","containers/TaskList/TaskList.js","store/actions/auth.js","containers/Auth/Auth.js","components/UI/StyleButton/StyleButton.js","HOC/Layout/Layout.js","components/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/tasks.js","store/reducers/auth.js","store/reducers/layout.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","connect","state","tasks","change","layout","props","id","match","params","taskOne","filter","task","toString","isDataAvailable","length","cls","push","classes","TaskOne","TaskOneBlack","clsToHome","toHome","toHomeBlack","Fragment","className","AroundLink","to","style","textDecoration","join","descr","date","pathname","Button","type","ButtonAuth","clsForm","clsAction","ButtonAction","onClick","disabled","children","Task","clsIconPencil","changeTheme","whiteIcon","clsIconCheck","clsIconTimes","checkedTask","checked","clsTheme","WhiteTheme","BlackTheme","Edit","update","IconWrapper","aria-hidden","slice","Checked","Delete","delete","Modal","newTask","valueInput","changeHandler","value","tasksInfo","taskId","modalInfo","NewChangingTask","setState","this","whiteModal","blackModal","clsInto","whiteIntoModal","blackIntoModal","setValue","inputModal","placeholder","onChange","event","target","buttonModal","updated","React","Component","openModal","loader","ButtonMobile","isInvalid","valid","touched","shouldValidate","InputType","Input","htmlFor","Math","random","invalid","clsLabel","labelWhite","labelBlack","label","errorMessage","createFormTask","config","validation","validate","isValid","required","trim","Backdrop","newCheck","newTasks","deleteTask","updateTaskState","createTask","successCreateTask","fetchTasksSuccess","toggleChange","toggle","newToggle","TaskList","formtask","addTask","localStorage","getItem","alert","floor","console","log","Date","toLocaleDateString","addTaskToDB","formControl","updateTask","updatedTask","openModalToUpdateTask","modalOpen","removeTask","taskRemove","map","check","modalClose","closeModal","fetchTasks","clsTask","TaskWhite","TaskBlack","index","key","details","clsBox","BoxWhite","BoxBlack","clsTaskList","TaskListWhite","TaskListBlack","clsTasks","TasksWhite","TasksBlack","clsh1","h1White","h1Black","FormWhite","FormBlack","clsNoTasks","noTaskInscriptionWhite","noTaskInscriptionBlack","open","onSubmit","e","preventDefault","mobileWrapper","changeThemeDiv","boxThemeDiv","renderTasks","dispatch","a","userId","axios","get","response","Object","keys","data","forEach","error","getState","post","put","autoLogout","time","setTimeout","logout","removeItem","authSuccess","token","Auth","isFormValid","email","password","minLength","loginHandler","auth","registerHandler","submitHandler","onChangeHandler","controlName","control","validateControl","name","test","String","toLowerCase","clsAuth","AuthBlack","AuthForm","divInput","renderInputs","divButton","isLogin","authData","returnSecureToken","url","expirationDate","getTime","expiresIn","setItem","idToken","localId","StyleButton","Together","textAlign","fontStyle","fontSize","isAuthenticated","useState","menu","setMenu","Layout","White","Black","typeofButton","clsMenu","MenuToggle","MenuToggleBlack","clsDrawer","Drawer","close","links","exact","styleButton","link","activeClassName","active","author","Logout","App","autoLogin","path","component","Boolean","window","location","hostname","initialState","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.04120051.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout-modules__Layout--3y43T\",\"White\":\"Layout-modules__White--2XVaD\",\"headerWhite\":\"Layout-modules__headerWhite--26ceq\",\"Black\":\"Layout-modules__Black--3uGGo\",\"headerBlack\":\"Layout-modules__headerBlack--lITt7\",\"styleButton\":\"Layout-modules__styleButton--1zAeU\",\"author\":\"Layout-modules__author--Ol5nc\",\"MenuToggle\":\"Layout-modules__MenuToggle--p0BhU\",\"MenuToggleBlack\":\"Layout-modules__MenuToggleBlack--20RPZ\",\"open\":\"Layout-modules__open--MFKUZ\",\"Drawer\":\"Layout-modules__Drawer--1dj87\",\"close\":\"Layout-modules__close--37Ukg\",\"active\":\"Layout-modules__active--1jFDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"whiteModal\":\"Modal-modules__whiteModal--b8-gS\",\"blackModal\":\"Modal-modules__blackModal--2cfTf\",\"whiteIntoModal\":\"Modal-modules__whiteIntoModal--3CTeR\",\"blackIntoModal\":\"Modal-modules__blackIntoModal--KrSUy\",\"inputModal\":\"Modal-modules__inputModal--O6rUG\",\"buttonModal\":\"Modal-modules__buttonModal--2VEpE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskOne\":\"TaskOne-modules__TaskOne--3wmeM\",\"TaskOneBlack\":\"TaskOne-modules__TaskOneBlack--3oNBG\",\"AroundLink\":\"TaskOne-modules__AroundLink--3qVQR\",\"toHome\":\"TaskOne-modules__toHome--1kIbe\",\"toHomeBlack\":\"TaskOne-modules__toHomeBlack--1JKS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth-modules__Auth--2icya\",\"AuthBlack\":\"Auth-modules__AuthBlack--2MnOT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button-modules__Button--3mKQP\",\"ButtonAuth\":\"Button-modules__ButtonAuth--c6Mgk\",\"ButtonAction\":\"Button-modules__ButtonAction--_pAIU\",\"error\":\"Button-modules__error--3RpfL\",\"success\":\"Button-modules__success--lKcEX\",\"primary\":\"Button-modules__primary--x7JaR\",\"checked_delete\":\"Button-modules__checked_delete--1Hu_e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input-modules__Input--1f0cA\",\"invalid\":\"Input-modules__invalid--EiuYE\",\"labelWhite\":\"Input-modules__labelWhite--3RrYw\",\"labelBlack\":\"Input-modules__labelBlack--3zM0-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"StyleButton-modules__Button--1F6D1\",\"white\":\"StyleButton-modules__white--2_ndw\",\"black\":\"StyleButton-modules__black--7Jz6b\",\"Together\":\"StyleButton-modules__Together--2vnaa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonMobile\":\"ButtonMobile-modules__ButtonMobile--2H3ZU\",\"error\":\"ButtonMobile-modules__error--2IIuD\",\"success\":\"ButtonMobile-modules__success--3C7pq\",\"primary\":\"ButtonMobile-modules__primary--2M2_D\",\"checked_delete\":\"ButtonMobile-modules__checked_delete--3UKUc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskListWhite\":\"TaskList-modules__TaskListWhite--2XoMj\",\"TaskListBlack\":\"TaskList-modules__TaskListBlack--313zV\",\"mobileWrapper\":\"TaskList-modules__mobileWrapper--273bG\",\"h1White\":\"TaskList-modules__h1White--1pSGo\",\"h1Black\":\"TaskList-modules__h1Black--1pnNO\",\"TasksWhite\":\"TaskList-modules__TasksWhite--QIKjv\",\"TasksBlack\":\"TaskList-modules__TasksBlack--1PJ7-\",\"TaskWhite\":\"TaskList-modules__TaskWhite--1Wdc4\",\"TaskBlack\":\"TaskList-modules__TaskBlack--3qrLp\",\"BoxWhite\":\"TaskList-modules__BoxWhite--1hOgY\",\"BoxBlack\":\"TaskList-modules__BoxBlack--1D7L4\",\"FormWhite\":\"TaskList-modules__FormWhite--11asz\",\"FormBlack\":\"TaskList-modules__FormBlack--3PhHv\",\"noTaskInscriptionWhite\":\"TaskList-modules__noTaskInscriptionWhite--JRvBJ\",\"noTaskInscriptionBlack\":\"TaskList-modules__noTaskInscriptionBlack--hYOxe\",\"boxThemeDiv\":\"TaskList-modules__boxThemeDiv--rFL7E\",\"changeThemeDiv\":\"TaskList-modules__changeThemeDiv--GWcT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop-modules__Backdrop--2y06_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App--1o-Fp\",\"App-logo\":\"App__App-logo--3JCPt\",\"App-logo-spin\":\"App__App-logo-spin--RvI1J\",\"App-header\":\"App__App-header--3iH8L\",\"App-link\":\"App__App-link--13fTZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task-modules__Task--33rCP\",\"IconWrapper\":\"Task-modules__IconWrapper--jydIA\",\"descr\":\"Task-modules__descr--5oV7b\",\"checked\":\"Task-modules__checked--2yL58\",\"Edit\":\"Task-modules__Edit--2TS1u\",\"Checked\":\"Task-modules__Checked--3A1lb\",\"Delete\":\"Task-modules__Delete--15PWG\",\"WhiteTheme\":\"Task-modules__WhiteTheme--_d5-f\",\"BlackTheme\":\"Task-modules__BlackTheme--3ZhIP\",\"whiteIcon\":\"Task-modules__whiteIcon--192H2\"};","import React from 'react'\r\nimport classes from './TaskOne.modules.css'\r\nimport {Link, Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nconst TaskOne = (props) => {\r\n\r\n    const id = props.match.params.id\r\n    const tasks = props.tasks\r\n    const taskOne = tasks.filter( (task) => task.id.toString() === id.toString())\r\n    // при перезагрузке будет редиректить \r\n    let isDataAvailable = true\r\n    if (taskOne.length === 0) { \r\n        isDataAvailable = false\r\n    }\r\n    const cls = []\r\n    if (props.change) {\r\n        cls.push(classes.TaskOne)\r\n    } else {\r\n        cls.push(classes.TaskOneBlack)\r\n    }\r\n    const clsToHome = []\r\n    if (props.change) {\r\n        clsToHome.push(classes.toHome)\r\n    } else {\r\n        clsToHome.push(classes.toHomeBlack)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                isDataAvailable ? // редирект или нет\r\n                <React.Fragment>\r\n                    <div className={classes.AroundLink}>\r\n                        <Link to={'/'} style={{textDecoration: 'none'}} >  <div className={ clsToHome.join(' ') }> <strong> Назад </strong> </div> </Link>\r\n                    </div>\r\n\r\n                    <div className={cls.join(' ')}>\r\n                        <h1> Your Task </h1>\r\n                        <h2> {taskOne[0].descr} <p> Дата создания: { taskOne[0].date } </p></h2>\r\n                    </div> \r\n                </React.Fragment>\r\n                : \r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/\"\r\n                    }}\r\n                />\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        tasks: state.tasks.tasks,\r\n        change: state.layout.change,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskOne)","import React from 'react'\r\nimport classes from './Button.modules.css'\r\n\r\nconst Button = (props) => {\r\n\r\n    \r\n    const cls = [\r\n        classes[props.type]\r\n    ]\r\n\r\n    if (props.id === 'auth') {\r\n        cls.push(classes.ButtonAuth)\r\n    } \r\n\r\n    const clsForm = []\r\n    if (props.id === 'form') {\r\n        clsForm.push(classes.Button)\r\n    }\r\n\r\n    const clsAction = []\r\n    if (props.id === 'action') {\r\n        clsAction.push(classes.ButtonAction)\r\n    }\r\n\r\n    \r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ') + ' ' + clsAction.join(' ') + ' ' + clsForm.join(' ') }\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport classes from './Task.modules.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport Button from '../UI/Button/Button'\r\n\r\nconst Task = props => {\r\n\r\n        const clsIconPencil = [\r\n            'fa',\r\n            'fa-pencil',\r\n        ]\r\n        if (!props.changeTheme) {\r\n            clsIconPencil.push(classes.whiteIcon)\r\n        }\r\n\r\n        const clsIconCheck = [\r\n            'fa',\r\n            'fa-check',\r\n        ]\r\n        if (!props.changeTheme) {\r\n            clsIconCheck.push(classes.whiteIcon)\r\n        }\r\n\r\n        const clsIconTimes = [\r\n            'fa',\r\n            'fa-times',\r\n        ]\r\n        if (!props.changeTheme) {\r\n            clsIconTimes.push(classes.whiteIcon)\r\n        }\r\n\r\n        const cls = [ null ]\r\n        if (props.checkedTask) {\r\n            cls.push(classes.checked)\r\n        } \r\n\r\n        const clsTheme = []\r\n        if (props.changeTheme) {\r\n            clsTheme.push(classes.WhiteTheme)\r\n        } else {\r\n            clsTheme.push(classes.BlackTheme)\r\n        }\r\n\r\n        return(\r\n            <div className={classes.Task}>\r\n                \r\n                <div className={classes.Edit}>\r\n                    <Button \r\n                        id='action'\r\n                        onClick={props.update}\r\n                        type=\"checked_delete\"\r\n                    >   \r\n                    <div className={classes.IconWrapper}>\r\n                         <i className={clsIconPencil.join(' ')} aria-hidden=\"true\"></i>\r\n                    </div>\r\n                    </Button>\r\n                </div>\r\n              \r\n            <NavLink \r\n                to={{ pathname:`/tasks/${props.id}` }} \r\n                style={{textDecoration: 'none'}}\r\n            >\r\n                <div className={classes.descr}>\r\n                    <p className={cls.join(' ') + ' ' + clsTheme.join(' ')}> { props.descr.slice(0, 40)} {(props.descr.length > 40) ? '...' : null} </p>\r\n                </div>\r\n               \r\n            </NavLink>\r\n            <div className={classes.Checked}>\r\n                <Button \r\n                    id='action'\r\n                    onClick={props.checked}\r\n                    type=\"checked_delete\"\r\n                >\r\n                    <div className={classes.IconWrapper}>\r\n                        <i className={clsIconCheck.join(' ')} aria-hidden=\"true\"/>\r\n                    </div>\r\n                   \r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.Delete}>\r\n                <Button\r\n                    id='action'\r\n                    disabled={!props.checkedTask}\r\n                    onClick={ props.delete }\r\n                    type=\"checked_delete\"\r\n                >\r\n                 <div className={classes.IconWrapper}>\r\n                    <i className={clsIconTimes.join(' ')} aria-hidden=\"true\"/>\r\n                 </div>\r\n                   \r\n                 </Button>\r\n            </div>   \r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Task","import React from 'react'\r\nimport classes from './Modal.modules.css'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Modal extends React.Component  {\r\n\r\n    state = {\r\n        newTask: null,\r\n        valueInput: '',\r\n        disabled: true\r\n    }\r\n    changeHandler = (value) => {\r\n            const tasks = [...this.props.tasksInfo]\r\n            const taskId = this.props.modalInfo.taskId\r\n            const changingTask = tasks.filter( task => task.id === taskId)\r\n            const NewChangingTask = changingTask[0]\r\n            NewChangingTask.descr = value\r\n            this.setState({\r\n                newTask: NewChangingTask,\r\n                valueInput: value,\r\n                disabled: false\r\n            })     \r\n    }\r\n\r\n    setValue() {\r\n        const tasks = [...this.props.tasksInfo]\r\n        const taskId = this.props.modalInfo.taskId\r\n        const changingTask = tasks.filter( task => task.id === taskId)\r\n        const NewChangingTask = changingTask[0]\r\n        return NewChangingTask.descr \r\n    }\r\n\r\n    render() {\r\n        const cls = []\r\n        if (this.props.changeTheme) {\r\n            cls.push(classes.whiteModal)\r\n        } else {\r\n            cls.push(classes.blackModal)\r\n        }\r\n        const clsInto = []\r\n        if (this.props.changeTheme) {\r\n            clsInto.push(classes.whiteIntoModal)\r\n        } else {\r\n            clsInto.push(classes.blackIntoModal)\r\n        }\r\n        return (\r\n            <div className={cls.join(' ')}>\r\n                <div className={clsInto.join(' ')}> \r\n                    Редактирование таска\r\n                    <form>\r\n                        <input  \r\n                            value={this.setValue()}\r\n                            className={classes.inputModal}\r\n                            placeholder=\"описание задания\" \r\n                            onChange={event => this.changeHandler(event.target.value)}\r\n                        />\r\n                    </form>\r\n                \r\n                    <button\r\n                        disabled={this.state.disabled} \r\n                        className={classes.buttonModal} \r\n                        onClick={() => this.props.updated(this.state.newTask)}>\r\n                        Update\r\n                    </button>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return  {\r\n        // state, который мы хотим здесь применять\r\n        openModal: state.tasks.openModal,\r\n        loader: state.tasks.loader,\r\n        tasks: state.tasks.tasks,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Modal)\r\n\r\n","import React from 'react'\r\nimport classes from './ButtonMobile.modules.css'\r\n\r\nconst ButtonMobile = (props) => {\r\n    const cls = [\r\n        classes.ButtonMobile,\r\n        classes[props.type]\r\n    ]\r\n    return (\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default ButtonMobile","import React from 'react'\r\nimport classes from './Input.modules.css'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    // console.log('in input valid', valid)\r\n    // console.log('in input touched', touched)\r\n    // console.log('in input shouldValidate', shouldValidate)\r\n    // console.log('in input result!',!valid && shouldValidate && touched)\r\n    return !valid && shouldValidate && touched\r\n}\r\nconst Input = props => {\r\nconst InputType = props.type || 'text'\r\nconst cls = [classes.Input]\r\nconst htmlFor = `${InputType}-${Math.random()}`\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    let clsLabel = []\r\n    if (props.change) {\r\n        clsLabel.push(classes.labelWhite)\r\n    } else {\r\n        clsLabel.push(classes.labelBlack)\r\n    }\r\n    \r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor} className={clsLabel.join(' ')}> {props.label} </label>\r\n            <input \r\n                type={InputType} \r\n                id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n            />\r\n            {   \r\n                isInvalid(props) ?\r\n                <span> {props.errorMessage  || \"Введите верное значение!\"} </span>\r\n                : null\r\n            }\r\n        </div>   \r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        change: state.layout.change\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Input)","export function createFormTask(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n}\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n    let isValid = true\r\n    if (validation.required) {\r\n        isValid = value.trim() !== '' && isValid\r\n    }\r\n    return isValid\r\n}\r\n// если есть несколько input\r\n\r\n// export function validateForm(formControls) {\r\n//     let isFormValid = true\r\n//     for (let control in formControls) {\r\n//         if (formControls.hasOwnProperty(control)) {\r\n//             isFormValid = formControls[control].valid && isFormValid\r\n//         }\r\n//     }\r\n//     return isFormValid\r\n// }","import React from 'react'\r\nimport classes from './Backdrop.modules.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick} />\r\n\r\nexport default Backdrop","import {\r\n    SET_TASK, \r\n    RESET_TASK, \r\n    FETCH_TASKS_START, \r\n    FETCH_TASKS_SUCCESS, \r\n    FETCH_TASKS_ERROR, \r\n    SUCCESS_CREATED_TASK, \r\n    UPDATE_TASK,\r\n    CLOSE_MODAL, \r\n    OPEN_MODAL,\r\n    DELETE_TASK,\r\n    NEW_CHECK,\r\n} from './actionTypes'\r\nimport axios from 'axios'\r\n\r\nexport function fetchTasks() {\r\n    // брать таски из бд \r\n    return async dispatch => {\r\n        dispatch(fetchTasksStart())\r\n        try {\r\n            // получаем userId и добавляем к url перед tasks\r\n            const userId = localStorage.getItem('userId')\r\n            const response = await axios.get(`https://todo-9e5aa.firebaseio.com/${userId}/tasks.json`) \r\n\r\n            const tasks = []\r\n\r\n            Object.keys(response.data).forEach((key, index) => { \r\n                tasks.push(response.data[key])\r\n            });\r\n\r\n            dispatch(fetchTasksSuccess(tasks))\r\n        } catch (error) {\r\n            dispatch(fetchTasksError(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport function updatedTask(updatedTask) {\r\n    return async (dispatch, getState) => {\r\n        // замена таска в state на обновленный\r\n        const tasks = getState().tasks.tasks\r\n        const newTasks = tasks.filter( (task) => task.id !== updatedTask.id)\r\n        newTasks.push(updatedTask)\r\n        dispatch(updateTaskState(newTasks))\r\n\r\n        // обновление БД\r\n        // получаем userId и добавляем к url перед tasks\r\n        const userId = localStorage.getItem('userId')\r\n        await axios.put(`https://todo-9e5aa.firebaseio.com/${userId}/tasks.json`, newTasks) // полностью перезаписываю новый массив тасков\r\n        \r\n    }\r\n}\r\n\r\nexport function taskRemove(newTasks) {\r\n    return async dispatch => {\r\n        dispatch(deleteTask(newTasks))\r\n         // получаем userId и добавляем к url перед tasks\r\n         const userId = localStorage.getItem('userId')\r\n        await axios.put(`https://todo-9e5aa.firebaseio.com/${userId}/tasks.json`, newTasks)\r\n    }\r\n}\r\n\r\nexport function check(newTasks) {\r\n    return async dispatch => {\r\n        dispatch(newCheck(newTasks))\r\n        const userId = localStorage.getItem('userId')\r\n        await axios.put(`https://todo-9e5aa.firebaseio.com/${userId}/tasks.json`, newTasks)\r\n    }\r\n}\r\n\r\nexport function newCheck(newTasks) {\r\n    return {\r\n        type: NEW_CHECK,\r\n        newTasks\r\n    }\r\n}\r\n\r\nexport function deleteTask(newTasks) {\r\n    return {\r\n        type: DELETE_TASK,\r\n        newTasks\r\n    }\r\n}\r\n\r\nexport function modalOpen(id) {\r\n    return {\r\n        type: OPEN_MODAL,\r\n        id\r\n    }\r\n}\r\n\r\nexport function closeModal() {\r\n    return {\r\n        type: CLOSE_MODAL\r\n    }\r\n}\r\n\r\nexport function updateTaskState(tasks) {\r\n    return {\r\n        type: UPDATE_TASK,\r\n        tasks\r\n    }\r\n}\r\n\r\nexport function createTask(task) {\r\n    return {\r\n        type: SET_TASK,\r\n        task\r\n    }\r\n}\r\n\r\nexport function resetTask() {\r\n    return {\r\n        type: RESET_TASK\r\n    }\r\n}\r\n\r\nexport function addTaskToDB(task) {\r\n    // добавляем в state новый таск \r\n    // обновляем БД\r\n    return async (dispatch, getState) => {\r\n        dispatch(createTask(task))\r\n\r\n        // получаем userId и добавляем к url перед tasks\r\n        const userId = localStorage.getItem('userId')\r\n        await axios.post(`https://todo-9e5aa.firebaseio.com/${userId}/tasks.json`, getState().tasks.task)\r\n\r\n        dispatch(successCreateTask(task))\r\n        dispatch(resetTask())\r\n    }\r\n}\r\n\r\n// export function \r\n\r\nexport function successCreateTask(task) {\r\n    return {\r\n        type: SUCCESS_CREATED_TASK,\r\n        task\r\n    }\r\n}\r\nexport function fetchTasksStart() {\r\n    return {\r\n        type: FETCH_TASKS_START\r\n    }\r\n}\r\n\r\nexport function fetchTasksSuccess(tasks) {\r\n    return {\r\n        type: FETCH_TASKS_SUCCESS,\r\n        tasks\r\n    }\r\n}\r\n\r\nexport function fetchTasksError(error) {\r\n    return {\r\n        type: FETCH_TASKS_ERROR,\r\n        error: error\r\n    }\r\n}","export const TYPE_ACTIONS = 'TYPE_ACTIONS'\r\n\r\n// авторизация\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\r\n\r\n// таски\r\nexport const SET_TASK = 'SET_TASK'\r\nexport const RESET_TASK = 'RESET_TASK'\r\nexport const FETCH_TASKS_START = 'FETCH_TASKS_START'\r\nexport const FETCH_TASKS_ERROR = 'FETCH_TASKS_ERROR'\r\nexport const FETCH_TASKS_SUCCESS = 'FETCH_TASKS_SUCCESS'\r\nexport const SUCCESS_CREATED_TASK ='SUCCESS_CREATED_TASK'\r\nexport const UPDATE_TASK = 'UPDATE_TASK'\r\nexport const DELETE_TASK='DELETE_TASK'\r\nexport const NEW_CHECK = 'NEW_CHECK'\r\n\r\n//modal\r\nexport const OPEN_MODAL = 'OPEN_MODAL'\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL'\r\n\r\n//layout \r\nexport const TOGGLE_CHANGE = 'TOGGLE_CHANGE'","import { TOGGLE_CHANGE } from \"./actionTypes\"\r\n\r\nexport function toggleChange(toggle) {\r\n    const newToggle = toggle\r\n    return {\r\n        type: TOGGLE_CHANGE,\r\n        newToggle\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport classes from './TaskList.modules.css'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Task from '../../components/Task/Task'\r\nimport Modal from '../../containers/Modal/Modal'\r\n\r\nimport ButtonMobile from '../../components/UI/ButtonMobile/ButtonMobile'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport {createFormTask, validate} from '../../form/FormFramework'\r\n\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop'\r\nimport { addTaskToDB, fetchTasks, createTask, updatedTask, modalOpen, closeModal, taskRemove, check } from '../../store/actions/tasks'\r\nimport {toggleChange} from '../../store/actions/layout'\r\n\r\nclass TaskList extends React.Component {\r\n   \r\n    state = {\r\n        formtask: createFormTask(\r\n            {\r\n                label: 'Введите задание',\r\n                errorMessage: 'Поле не должно быть пустым'\r\n            },\r\n            {required: true}\r\n        )\r\n    }\r\n\r\n    async componentDidMount() { \r\n        // получаем данные юзера по ссылке \r\n        this.props.fetchTasks()\r\n        // будет идти загрузга тасков с бд\r\n    }\r\n\r\n    addTask = () => {\r\n        // const token = localStorage.getItem('token')\r\n        // console.log()\r\n        // будем помещать данные из formtask в массив тасков\r\n        // очистка formtask\r\n        if (!localStorage.getItem('userId')) {\r\n            alert('Необходимо авторизоваться!')\r\n        }\r\n        if (this.state.formtask.valid && localStorage.getItem('userId')) {\r\n            const tasks = [...this.props.tasks]\r\n            const length = tasks.length\r\n            const taskId = length + Math.floor(Math.random() * 10000)\r\n            console.log('taskId ', taskId)\r\n            const newTask = {\r\n                id: taskId,\r\n                descr: this.state.formtask.value,\r\n                date: new Date().toLocaleDateString(),\r\n                checked: false\r\n            }\r\n             // добавляем таск в state\r\n            this.props.addTaskToDB(newTask) // берем таск из state, добавляем через post в массив tasks, удаляем таск из state\r\n\r\n            this.setState({\r\n                formtask: createFormTask(   \r\n                {\r\n                    label: 'Введите задание',\r\n                    errorMessage: 'Поле не должно быть пустым'\r\n                },\r\n                {required: true})\r\n            })\r\n        } \r\n    }\r\n    changeHandler = (value) => {\r\n        const formControl = {...this.state.formtask}\r\n        formControl.touched = true\r\n        formControl.value = value\r\n        formControl.valid = validate(formControl.value, formControl.validation)\r\n        //  function validate(value, validation = null) {\r\n        //     if (!validation) {\r\n        //         return true                              // возвращает true, если поле не должно валидироваться\r\n        //     }\r\n        //     let isValid = true\r\n        //     if (validation.required) {                   // если валидация должна быть - required: true\r\n        //         isValid = value.trim() !== '' && isValid // вернет true, если значение не пустое \r\n        //     }\r\n        //     return isValid                               // возвращается true или false, в зависимости от наличия символов\r\n        // }\r\n         // функция action\r\n        this.setState( {\r\n            formtask: formControl,\r\n        } )\r\n    }\r\n\r\n    updateTask = (updatedTask) => {\r\n        // передаем из компонента модалки обновленный таск и заменяем его на таск в state\r\n        if (updatedTask.descr !== null) {\r\n            this.props.updatedTask(updatedTask)\r\n        }\r\n    }\r\n\r\n    openModalToUpdateTask = (id) => { // переменная, которая будет открывать компонент модалки\r\n         // функция action\r\n        this.props.modalOpen(id)\r\n    }\r\n   \r\n    removeTask = (id) => {\r\n        const tasks = [...this.props.tasks]\r\n        const newTasks = tasks.filter( task => task.id !== id)\r\n        // функция action, меням state, добавляем в БД\r\n        this.props.taskRemove(newTasks)\r\n    }\r\n\r\n    checkedTask = (id) => {\r\n        const tasks = [...this.props.tasks]\r\n        const newTasks = tasks.map( (task) => {\r\n            if (task.id === id) {\r\n                const checked = task.checked\r\n                task.checked = !checked\r\n            }  \r\n            return task\r\n        }) \r\n        // меням поле checked таска, путем переобновления state и заносим данные в БД\r\n        this.props.check(newTasks)\r\n    }\r\n\r\n    modalClose = () => {\r\n        this.props.closeModal()\r\n    }\r\n\r\n    renderTasks(tasks) {\r\n\r\n        const clsTask = []\r\n        if (this.props.change) {\r\n            clsTask.push(classes.TaskWhite)\r\n        } else {\r\n            clsTask.push(classes.TaskBlack)\r\n        }\r\n\r\n        return tasks.map( (task, index) => {\r\n            return (\r\n                <div className={clsTask.join(' ')} key={task.id}>\r\n                    <Task \r\n                        changeTheme={this.props.change}\r\n                        key={task.id}\r\n                        checkedTask={task.checked}\r\n                        date={task.date}\r\n                        descr={ task.descr } \r\n                        details = { task.details } \r\n                        id={task.id} \r\n                        checked={() => this.checkedTask(task.id)} \r\n                        delete={ () => this.removeTask(task.id)}\r\n                        update={() => this.openModalToUpdateTask(task.id)}\r\n                    />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const clsBox = []\r\n        if (this.props.change) {\r\n            clsBox.push(classes.BoxWhite)\r\n        } else {\r\n            clsBox.push(classes.BoxBlack)\r\n        }\r\n\r\n        const clsTaskList = []\r\n        if (this.props.change) {\r\n            clsTaskList.push(classes.TaskListWhite)\r\n        } else {\r\n            clsTaskList.push(classes.TaskListBlack)\r\n        }\r\n\r\n        const clsTasks = []\r\n        if (this.props.change) {\r\n            clsTasks.push(classes.TasksWhite)\r\n        } else {\r\n            clsTasks.push(classes.TasksBlack)\r\n        }\r\n\r\n        const clsh1 = []\r\n        if (this.props.change) {\r\n            clsh1.push(classes.h1White)\r\n        } else {\r\n            clsh1.push(classes.h1Black)\r\n        }\r\n\r\n        const clsForm = []\r\n        if (this.props.change) {\r\n            clsForm.push(classes.FormWhite)\r\n        } else {\r\n            clsForm.push(classes.FormBlack)\r\n        }\r\n\r\n        const clsNoTasks = []\r\n        if (this.props.change) {\r\n            clsNoTasks.push(classes.noTaskInscriptionWhite)\r\n        } else {\r\n            clsNoTasks.push(classes.noTaskInscriptionBlack)\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n               \r\n                { this.props.openModal.open ? <Backdrop onClick={this.modalClose}/> : null }\r\n            <div className={clsTaskList.join(' ')}>\r\n                <h1 className={clsh1.join(' ')}>  \r\n                    ToDo List\r\n                </h1>\r\n\r\n                <div className={clsForm.join(' ')}>\r\n                    <form onSubmit={(e) => {e.preventDefault()}}>\r\n                        <div className={classes.mobileWrapper}>\r\n                            <div>\r\n                                <Input \r\n                                // передаем в formtask данные для изменения классов и свойств input\r\n                                    change={this.props.change}\r\n                                    label={this.state.formtask.label} \r\n                                    value={this.state.formtask.value}\r\n                                    valid={this.state.formtask.valid}\r\n                                    shouldValidate = {!!this.state.formtask.validation}\r\n                                    touched={this.state.formtask.touched}\r\n                                    errorMessage={this.state.formtask.errorMessage}\r\n                                    onChange={event => this.changeHandler(event.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <ButtonMobile \r\n                                    type=\"primary\" \r\n                                    disabled={false}\r\n                                    onClick={this.addTask}\r\n                                    >\r\n                                        Cоздать\r\n                                </ButtonMobile>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <Button \r\n                            id=\"form\"\r\n                            type=\"primary\" \r\n                             disabled={false}\r\n                            onClick={this.addTask}\r\n                        > Создать </Button>\r\n                        \r\n                    </form>\r\n                </div>\r\n\r\n                {/* блок смены темы при достижении экрана 572px, чтобы показать, в @media ставим  display:block; */}\r\n                \r\n                    <div className={classes.changeThemeDiv} onClick={() => this.props.toggleChange(!this.props.change)}>\r\n                        <div className={classes.boxThemeDiv}> \r\n                             Сменить стиль\r\n                        </div>\r\n                    </div>\r\n                \r\n                { this.props.openModal.open ? <div> <Modal changeTheme={this.props.change} updated={this.updateTask} modalInfo={this.props.openModal} tasksInfo={this.props.tasks}/> </div> : null } \r\n\r\n                <div className={clsBox.join(' ')}>\r\n                    <div className={clsTasks.join(' ')}>\r\n                        { this.props.tasks.length ? this.renderTasks(this.props.tasks)  : <p> <strong className={clsNoTasks.join(' ')}> Заданий нет </strong> </p>}\r\n                    </div>\r\n                </div>\r\n               \r\n            </div>\r\n           \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return  {\r\n        // state, который мы хотим здесь применять\r\n        openModal: state.tasks.openModal,\r\n        loader: state.tasks.loader,\r\n        tasks: state.tasks.tasks,\r\n        change: state.layout.change,\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchTasks: () => dispatch(fetchTasks()),\r\n        addTaskToDB: (task) => dispatch(addTaskToDB(task)),\r\n        createTask: () => dispatch(createTask()),\r\n        updatedTask: (task) => dispatch(updatedTask(task)),\r\n        modalOpen: (id) => dispatch(modalOpen(id)),\r\n        closeModal: () => dispatch(closeModal()),\r\n        taskRemove: (newTasks) => dispatch(taskRemove(newTasks)),\r\n        check: (newTasks) => dispatch(check(newTasks)),\r\n        toggleChange: (toggle) => dispatch(toggleChange(toggle)),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskList)","import { AUTH_LOGOUT, AUTH_SUCCESS} from \"./actionTypes\"\r\nimport axios from 'axios'\r\n\r\nexport function auth(email, password, isLogin) {\r\n\r\n    return async dispatch => {\r\n\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyBJUf6anFHVKEDAGZOEgcp0CLuv2CnOA78'\r\n\r\n        if (isLogin) {\r\n         url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyBJUf6anFHVKEDAGZOEgcp0CLuv2CnOA78'\r\n        } \r\n         \r\n            const response = await axios.post(url, authData)\r\n            const data = response.data       \r\n            const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n\r\n            localStorage.setItem('token', data.idToken)\r\n            localStorage.setItem('userId', data.localId)\r\n            localStorage.setItem('expirationDate', expirationDate)\r\n\r\n            dispatch(authSuccess(data.idToken))\r\n            dispatch(autoLogout(data.expiresIn))\r\n            \r\n        }\r\n    }\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout( () => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token')\r\n    localStorage.removeItem('userId')\r\n    localStorage.removeItem('expirationDate')\r\n    \r\n    return {\r\n        type: AUTH_LOGOUT,\r\n    }\r\n}\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token')\r\n        if (!token) {\r\n            dispatch(logout())\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n            if (expirationDate <= new Date()) {\r\n                dispatch(logout())\r\n            } else {\r\n                dispatch(authSuccess(token))\r\n                dispatch(autoLogout(( expirationDate.getTime() - new Date().getTime() ) / 1000))\r\n                // const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react'\r\nimport classes from './Auth.modules.css'\r\nimport Button from '../../components/UI/Button/Button'\r\nimport Input from '../../components/UI/Input/Input'\r\nimport {auth} from '../../store/actions/auth'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction validateEmail(email) { // функция для валидации почты\r\n    const re = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        isFormValid: false,\r\n        formControl: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControl.email.value,\r\n            this.state.formControl.password.value,\r\n            true\r\n        )\r\n    }\r\n\r\n    registerHandler = () => {\r\n        this.props.auth(\r\n            this.state.formControl.email.value,\r\n            this.state.formControl.password.value,\r\n            false\r\n        )\r\n    }\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n    \r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n\r\n        let isValid = true\r\n        \r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid \r\n        }\r\n\r\n        if (validation.email) {\r\n            isValid = validateEmail(value) && isValid\r\n        }\r\n\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n        if (value === '') {\r\n            isValid = true\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n       \r\n        const formControl = { ...this.state.formControl }\r\n        const control = { ...formControl[controlName] }\r\n\r\n        control.value = event.target.value\r\n        control.touched = true\r\n\r\n        control.valid = this.validateControl(control.value, control.validation)\r\n        formControl[controlName] = control\r\n        let isFormValid = true\r\n\r\n        Object.keys(formControl).forEach(name => {\r\n            isFormValid = formControl[name].valid && isFormValid\r\n        })\r\n        this.setState({\r\n            formControl, isFormValid\r\n        })\r\n    }\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControl).map((controlName, index) => {\r\n            const control = this.state.formControl[controlName]\r\n            return (\r\n            <Input \r\n                key={controlName + index}\r\n                type={control.type}\r\n                value={control.value}\r\n                valid={ control.valid }\r\n                touched = { control.touched }\r\n                label={ control.label }\r\n                errorMessage={ control.errorMessage }\r\n                shouldValidate = { !!control.validation }\r\n                onChange={ (event) => this.onChangeHandler(event, controlName) }\r\n            />\r\n            )\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const clsAuth = []\r\n        if (this.props.change) {\r\n            clsAuth.push(classes.Auth)\r\n        } else {\r\n            clsAuth.push(classes.AuthBlack)\r\n        }\r\n        return (\r\n        <div className={clsAuth.join(' ')}>\r\n            <div>\r\n                <h1> Авторизация </h1>\r\n\r\n                <form onSubmit={this.submitHandler} className={classes.AuthForm}>\r\n                    <div className={classes.divInput}>\r\n                       {this.renderInputs()}\r\n                    </div>\r\n\r\n\r\n                <div className={classes.divButton}>\r\n                    <Button \r\n                    id='auth'\r\n                    type=\"success\" \r\n                    onClick={this.loginHandler}\r\n                    disabled={!this.state.isFormValid}>\r\n                        Войти</Button>\r\n                    <Button  \r\n                    id='auth'\r\n                    type=\"primary\" \r\n                    onClick={this.registerHandler}\r\n                    disabled={!this.state.isFormValid}>\r\n                        Регистрация</Button>\r\n                </div>\r\n\r\n                </form> \r\n\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        change: state.layout.change\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)\r\n\r\n","import React from 'react'\r\nimport classes from './StyleButton.modules.css'\r\n\r\nconst StyleButton = (props) => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n    return (\r\n        <div className={classes.Together}>\r\n            <button\r\n                onClick={props.onClick}\r\n                className={cls.join(' ')}\r\n                disabled={props.disabled}\r\n            >\r\n                {props.children}\r\n            </button>\r\n            <p style={{textAlign:'center', fontStyle: 'italic', fontSize: '11px',}}> Сменить <br/> стиль </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StyleButton","import React, {useState} from 'react'\r\nimport classes from './Layout.modules.css'\r\n// import MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\n// import Drawer from '../../components/Navigation/Drawer/Drawer'\r\nimport Backdrop from '../../components/UI/Backdrop/Backdrop'\r\nimport StyleButton from '../../components/UI/StyleButton/StyleButton'\r\n\r\nimport {connect} from 'react-redux'\r\n\r\nimport {toggleChange} from '../../store/actions/layout'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst Layout = (props) => {\r\n\r\n\r\n        const [menu, setMenu] = useState(false)\r\n\r\n        const cls = [\r\n            classes.Layout\r\n        ]\r\n        //будет кнопка, меняющая стили через анимацию\r\n        if (props.change) {\r\n            cls.push(classes.White)\r\n        } else {\r\n            cls.push(classes.Black)\r\n        }\r\n\r\n        let typeofButton = ''\r\n        if (props.change) {\r\n            typeofButton = 'white'\r\n        } else {\r\n            typeofButton = 'black'\r\n        }\r\n        //___________________________________________________________________\r\n        let styleClass \r\n        if (props.change) {\r\n            styleClass = classes.MenuToggle\r\n        } else {\r\n            styleClass = classes.MenuToggleBlack\r\n        }\r\n        // изначально это бургер, который расположен слева\r\n        const clsMenu = [\r\n            styleClass,\r\n            'fa',\r\n        ]\r\n        // затем, когда menu: true, то значок - это крестик с классом open, который \r\n        if (menu) {\r\n            clsMenu.push('fa-times') \r\n            clsMenu.push(classes.open)\r\n        } else { \r\n            // когда menu: false, то это бургер с начальными классами\r\n            clsMenu.push('fa-bars')\r\n        }  \r\n        // clickHandler = () => { // функция, которая вызыввает метод, устанавливает  - menu: false\r\n        //     this.props.onClose()\r\n        // }\r\n    \r\n     \r\n       \r\n    \r\n            // изначально, если menu: true\r\n            const clsDrawer = [classes.Drawer]\r\n    \r\n            // если menu: false, Добавляется анимация закрытия\r\n            if (!menu) {\r\n                clsDrawer.push(classes.close)\r\n            }\r\n    \r\n            const links = [\r\n                {to: '/', label: 'Tasks', exact: true},\r\n            ]\r\n    \r\n            if (props.isAuthenticated) {\r\n                links.push({to: '/logout', label: 'Logout', exact: false})\r\n            } else {\r\n                links.push({to: '/auth', label: 'Auth', exact: false})\r\n            }\r\n    \r\n           \r\n           \r\n            \r\n        \r\n        return (\r\n            <div className={cls.join(' ')}>\r\n                <div className={classes.styleButton}>\r\n                    <StyleButton type={typeofButton} onClick = {() => props.toggleChange(!props.change)}>  </StyleButton>\r\n                </div>\r\n                {/* <Drawer \r\n                    isOpen={menu} \r\n                    onClose={ () => setMenu(false)}\r\n                    // isAuthenticated = {this.props.isAuthenticated}\r\n                /> */}\r\n                \r\n                {/* <MenuToggle\r\n                    onToggle={() => setMenu(!menu)}\r\n                    isOpen={menu}\r\n                > \r\n                </MenuToggle>  */}\r\n                <>\r\n                    <nav className={clsDrawer.join(' ')}> \r\n                        <ul>\r\n                            { links.map( (link, index)=> {\r\n                                return (\r\n                                    <li\r\n                                        key={index}\r\n                                    >\r\n                                        <NavLink  // передаем параметры в навлинк\r\n                                            to={link.to}\r\n                                            exact={link.exact}\r\n                                            activeClassName={classes.active} // стиль активной ссылки\r\n                                            onClick={() => setMenu(false)} // функция, нажатие ихменяет state menu на false\r\n                                        > \r\n                                            {link.label} \r\n                                        </NavLink>\r\n                                    </li>\r\n                                    )\r\n                                }\r\n                                ) \r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n                    \r\n                    {/* эффект фона при menu: true */}\r\n                    { menu ? <Backdrop onClick={() => setMenu(false)}/> : null } \r\n                    \r\n                </>\r\n                <>\r\n                    <i\r\n                        className={clsMenu.join(' ')}\r\n                        onClick={() => setMenu(!menu)}\r\n                    />\r\n                </>\r\n    \r\n                \r\n                 <main>\r\n                      {props.children}\r\n                      <h5 className={classes.author}> developed by Melkov Pavel </h5>\r\n                 </main>\r\n            </div>\r\n        )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return  {\r\n        // state, который мы хотим здесь применять\r\n        change: state.layout.change,\r\n         isAuthenticated: !!state.auth.token,\r\n    }\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        toggleChange: (toggle) => dispatch(toggleChange(toggle)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)\r\n\r\n\r\n// class Layout extends React.Component {\r\n\r\n//     state = {\r\n//         menu: false,\r\n//     }\r\n    \r\n//     toggleMenuHandler = () => {\r\n//         this.setState({\r\n//             menu: !this.state.menu\r\n//         })\r\n//     }\r\n\r\n//     menuCloseHandler = () => {\r\n//         this.setState({\r\n//             menu: false\r\n//         })\r\n//     }\r\n\r\n//     changeStyle = () => {\r\n//         const toggle = !this.props.change\r\n//         this.props.toggleChange(toggle)\r\n//     }\r\n//     render() {\r\n\r\n//         const cls = [\r\n//             classes.Layout\r\n//         ]\r\n//         // будет кнопка, меняющая стили через анимацию\r\n//         if (this.props.change) {\r\n//             cls.push(classes.White)\r\n//         } else {\r\n//             cls.push(classes.Black)\r\n//         }\r\n\r\n//         let typeofButton = ''\r\n//         if (this.props.change) {\r\n//             typeofButton = 'white'\r\n//         } else {\r\n//             typeofButton = 'black'\r\n//         }\r\n\r\n//         return (\r\n//             <div className={cls.join(' ')}>\r\n//                 <div className={classes.styleButton}>\r\n//                     <StyleButton type={typeofButton} onClick = {this.changeStyle}>  </StyleButton>\r\n//                 </div>\r\n//                 <Drawer \r\n//                     isOpen={this.state.menu}\r\n//                     onClose={ this.menuCloseHandler}\r\n//                     // isAuthenticated = {this.props.isAuthenticated}\r\n//                 />\r\n//                 <MenuToggle\r\n//                     onToggle={this.toggleMenuHandler}\r\n//                     isOpen={this.state.menu}\r\n//                 > \r\n//                 </MenuToggle> \r\n//                  <main>\r\n//                       {this.props.children}\r\n//                       <h5 className={classes.author}> developed by Melkov Pavel </h5>\r\n//                  </main>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// function mapStateToProps(state) {\r\n//     return  {\r\n//         // state, который мы хотим здесь применять\r\n//         change: state.layout.change \r\n//     }\r\n// }\r\n// function mapDispatchToProps(dispatch) {\r\n//     return {\r\n//         toggleChange: (toggle) => dispatch(toggleChange(toggle)),\r\n//     }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Layout)","import React, {Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {logout} from '../../store/actions/auth'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.logout()\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to={'/'} />\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout)","import React, {Component} from 'react';\nimport './App.css'\n\nimport { Route, Switch, Redirect } from 'react-router-dom'\n\nimport TaskOne from './components/TaskOne/TaskOne'\nimport TaskList from '../src/containers/TaskList/TaskList'\nimport Auth from '../src/containers/Auth/Auth'\n\nimport Layout from './HOC/Layout/Layout'\nimport Logout from './components/Logout/Logout'\n\nimport {connect} from 'react-redux'\nimport {autoLogin} from './store/actions/auth'\n \nclass App extends Component {\n\n  componentDidMount() {\n    this.props.autoLogin()\n  }\n\n  render() {\n    // let routes = (\n    //  <>\n    //     <Route path='/auth'> {this.props.isAuthenticated ? <Redirect to=\"/\" /> : <Auth/>} </Route>\n    //     <Route path='/tasks/:id' > {!this.props.isAuthenticated ? <Redirect to=\"/\" /> : <TaskOne />} </Route>\n    //     <Route path='/' exact component={TaskList} />\n    //     {/* <Redirect to=\"/auth\" /> */}\n    //  </>\n    // )  \n\n    // if (this.props.isAuthenticated) {\n    //   routes = (\n    //    <>\n    //       <Route path='/logout'> {!this.props.isAuthenticated ? <Redirect to=\"/\" /> : <Logout/>}</Route>\n    //       <Route path='/tasks/:id'> {!this.props.isAuthenticated ? <Redirect to=\"/\" /> : <TaskOne/>} </Route>\n    //       <Route path='/' exact component={TaskList} />\n          \n    //    </>\n    //   )  \n    // }\n    \n    return (\n     <>\n      {\n        !this.props.isAuthenticated ? \n        <>\n          {/* <Layout>\n            <Switch>\n                <Route path='/auth' component={Auth} /> \n                <Route path='/' exact component={TaskList} />\n                <Redirect to='/auth'/>\n            </Switch>\n          </Layout> */}\n\n          <Switch>\n            <Layout>\n                <Route path='/auth' component={Auth} /> \n                <Route path='/' exact component={TaskList} />\n                <Redirect to='/auth'/>\n            </Layout>\n          </Switch>\n                \n            \n        </>\n        : \n        <>\n          {/* <Layout>\n            <Switch> \n                <Route path='/tasks/:id' component={TaskOne} /> \n                <Route path='/logout' component={Logout}/>\n                <Route path='/' exact component={TaskList} /> \n                <Redirect to='/'/>\n            </Switch>\n          </Layout> */}\n          <Switch>\n            <Layout>\n                <Route path='/tasks/:id' component={TaskOne} /> \n                <Route path='/logout' component={Logout}/>\n                <Route path='/' exact component={TaskList} /> \n                <Redirect to='/'/>\n            </Layout>\n           </Switch>\n        </>\n      }\n       \n\n      </>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.auth.token\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    autoLogin: () => dispatch(autoLogin())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    SET_TASK, \r\n    RESET_TASK, \r\n    FETCH_TASKS_START, \r\n    FETCH_TASKS_SUCCESS , \r\n    FETCH_TASKS_ERROR, \r\n    SUCCESS_CREATED_TASK, \r\n    UPDATE_TASK, \r\n    OPEN_MODAL, \r\n    CLOSE_MODAL,\r\n    DELETE_TASK,\r\n    AUTH_LOGOUT,\r\n    NEW_CHECK\r\n}   from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    openModal: {\r\n        open: false,\r\n        taskId: null\r\n    },\r\n    loader: false,\r\n    tasks: [],\r\n    task: null,\r\n}\r\n\r\nexport default function tasksReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case NEW_CHECK: \r\n            return {\r\n                ...state, tasks: action.newTasks\r\n            }\r\n        case AUTH_LOGOUT: \r\n            return {\r\n                ...state, tasks: []\r\n            }\r\n        case DELETE_TASK: \r\n            return {\r\n                ...state, tasks: action.newTasks\r\n            }\r\n        case OPEN_MODAL: \r\n            return {\r\n                ...state,  openModal: {...state.openModal, open: true, taskId: action.id}\r\n            }\r\n        case CLOSE_MODAL: \r\n            return {\r\n                ...state, openModal: {...state.openModal, open: false, taskId: null}\r\n            }\r\n        case UPDATE_TASK:\r\n            return {\r\n                ...state, tasks: action.tasks\r\n            }\r\n        case SUCCESS_CREATED_TASK: \r\n            return {\r\n                ...state,  tasks: [...state.tasks, action.task]\r\n            }\r\n        case SET_TASK:\r\n            return {\r\n                ...state, task: action.task\r\n            }\r\n        case RESET_TASK:\r\n            return {\r\n                ...state, task: null\r\n            }\r\n        \r\n        case FETCH_TASKS_START:\r\n            return {\r\n                ...state, loader: true\r\n            }\r\n\r\n        case FETCH_TASKS_SUCCESS:\r\n            return {\r\n                ...state, tasks: action.tasks, loader: false\r\n             }\r\n        case FETCH_TASKS_ERROR:\r\n            return {\r\n                ...state, error: action.error\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import {AUTH_LOGOUT, AUTH_SUCCESS} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    token: null\r\n}\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            }\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {TOGGLE_CHANGE} from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    change: true\r\n}\r\n\r\nexport default function layoutReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case TOGGLE_CHANGE:\r\n            return {\r\n                ...state, change: action.newToggle\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport tasksReducer from './tasks'\r\nimport authReducer from './auth'\r\nimport layoutReducer from './layout'\r\n\r\nexport default combineReducers({\r\n    tasks: tasksReducer,\r\n    auth: authReducer,\r\n\r\n    layout: layoutReducer,\r\n})\r\n","import React from 'react';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// для redux\nimport {Provider} from 'react-redux'\nimport {createStore, compose, applyMiddleware } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\n\nimport thunk from 'redux-thunk'\nimport {BrowserRouter} from 'react-router-dom'\n\nconst composeEnhancers =\n  typeof window === 'object' &&\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?   \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n    }) : compose; \n\n\nconst store =  createStore( // наш стор\n  rootReducer, //\n  composeEnhancers( //\n    applyMiddleware(thunk) //\n  )\n)\n\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <>\n          <App />\n        </>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}